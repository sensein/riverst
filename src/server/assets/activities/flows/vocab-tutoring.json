{
  "name": "vocab-tutoring",
  "description": "A flow for an AI to help children learn vocabulary words from a book they are reading.",
  "state_config": {
    "stages": {
      "warm_up": {
        "checklist": {
          "friendly_greeting_done": false,
          "asked_about_audiobook": false,
          "followed_up_appropriately": false
        },
        "checklist_incomplete_message": "Please complete the following warm-up items: {}.",
        "checklist_complete_message": "Great job completing the warm-up stage. Now let's move on to the first vocabulary word.",
        "transition_logic" : {
          "conditions": [],
          "default_target_node": "vocab"

        }
      },
      "vocab": {
        "checklist": {
          "selected_unknown_word": false,
          "defined_simply": false,
          "asked_book_context_understanding": false,
          "asked_broader_context_understanding": false,
          "asked_for_new_sentence": false
        },
        "checklist_incomplete_message": "You made an error with and did not accomplish the following things, please read the task instructions thoroughly and the conversation thus far, and naturally fix this: {}.",
        "checklist_complete_message": "Great job teaching the vocab, now let's move on to a review phase to check mastery.",
        "transition_logic": {
          "conditions": [],
          "default_target_node": "review"
        }
      },
      "review": {
        "checklist": {
          "asked_for_definition": false,
          "asked_for_sentence": false,
          "provided_formal_definition": false
        },
        "checklist_incomplete_message": "Please complete the following review items: {}.",
        "checklist_complete_message": "Great job reviewing the vocab words. Now let's start to wrap up",
        "transition_logic": {
          "conditions": [],
          "default_target_node": "closing"
        }
      },
      "closing": {
        "checklist": {
          "praised_child": false,
          "encouraged_continued_reading": false,
          "suggested_word_usage": false,
          "summarized_learning": false
        },
        "checklist_incomplete_message": "Please complete the following closing items: {}.",
        "checklist_complete_message": "Great job wrapping up the session. You're all set for the next reading!",
        "transition_logic": {
          "conditions": [],
          "default_target_node": "end"
        }
      }
    },
    "user": {
      "index": null,
      "has_listened_to_book": false,
      "vocab_words_known": [],
      "vocab_words_taught": [],
      "vocab_words_taught+mastered": [],
      "vocab_words_taught+not_mastered": []
    },
    "activity": {
      "reading_context": {
        "indexable_by": "chapters",
        "book_title": "",
        "book_author": "",
        "pages": [
          {
            "text": "",
            "image": "",
            "vocab_words": [
              ""
            ]
          }
        ]
      }
    }
  },
  "flow_config": {
    "initial_node": "warm_up",
    "nodes": {
      "warm_up": {
        "name": "warm_up",
        "task_messages": [
          {
            "role": "system",
            "content": "TOOLS:\nReading context with book content is automatically provided, but if they have to tell you what chapter they are on then you must use get_reading_context() to get the actual chapter details.\nSilently call check_warm_up_progress() after completing ALL warm-up steps (don't mention this to the child).\n\nCRITICAL RULE:\nDO NOT teach vocabulary during warm-up. You MUST call check_warm_up_progress function before beginning any vocabulary instruction.\n\nWARM-UP PROCEDURE:\n\nStep 1 - Friendly Greeting:\nSay 'Hi there! It's so great to see you, My name is Riverst, your vocab tutor!' then ask about their week and wait for their response.\n\nStep 2 - Check Audiobook Progress:\nA) Ask if they listened to their audiobook this week.\n\nB) Chapter Verification (MANDATORY):\n   - Check the Key Information section for \"Chapter Number:\"\n   - If chapter number IS present: Proceed to step C\n   - If chapter number is NOT present: Ask \"What chapter are you on?\" → Wait for response → Call get_reading_context function and THEN proceed to step C \n\nC) Confirm the chapter number and give a brief summary of the chapter\n\nD) Follow-up based on listening status:\n   - If they HAVE listened: Ask one or two thoughtful, age-appropriate questions about the story or themes. Keep brief and move conversation forward, follow-up with their response\n   - If they have NOT listened: Gently encourage them to start soon. Ask what time of day might work best for listening.\n\nStep 3 [CRITICAL]: Just call the check_warm_up_progress function, nothing else!"
          }
        ],
        "functions": [
          {
            "type": "function",
            "function": {
              "name": "check_warm_up_progress",
              "description": "Based on non-summary parts of the conversation, check if all required warm-up elements have been covered in the preceding conversation. Return true or false for each item.",
              "parameters": {
                "type": "object",
                "properties": {
                  "friendly_greeting_done": {
                    "type": "boolean",
                    "description": "Did the model engage in friendly conversation to start?"
                  },
                  "asked_about_audiobook": {
                    "type": "boolean",
                    "description": "Did the model ask the child about the audiobook?"
                  },
                  "followed_up_appropriately": {
                    "type": "boolean",
                    "description": "Did the model asked appropriate follow-up questions based on child's response?"
                  },
                  "has_listened_to_book": {
                    "type": "boolean",
                    "description": "Whether the child has listened to their audiobook (for state checking)"
                  }
                },
                "required": [
                  "friendly_greeting_done",
                  "asked_about_audiobook",
                  "followed_up_appropriately",
                  "has_listened_to_book"
                ]
              },
              "handler": "general_handler"
            }
          },
          {
            "type": "function",
            "function": {
              "name": "get_reading_context",
              "description": "Get the current reading context, particularly when you previously had to ask what chapter we are on",
              "parameters": {
                "type": "object",
                "properties": {
                  "variable_name": {
                    "type": "string",
                    "description": "The name of the variable to retrieve",
                    "default": "reading_context"
                  },
                  "current_index": {
                    "type": "integer",
                    "description": "The current index of the reading context, supplied by the student after you ask"
                  }
                },
                "required": [
                  "variable_name",
                  "current_index"
                ]
              },
              "handler": "get_activity_handler"
            }
          }
        ],
        "post_actions": [
          {
            "type": "get_variable",
            "variable_name": "reading_context",
            "handler": "get_variable_action_handler"
          }
        ],
        "role_messages": [
          {
            "role": "system",
            "content": "You are a warm, engaging tutor teaching vocabulary to a child as part of a reading program. Your tone should feel natural, conversational, and child-appropriate — avoid robotic or overly formal language. \n- Keep your responses brief. \n- Do not use emojis or special characters in your responses. \n Instead of Mr. or Mrs., use Mr or Mrs\n- Allow the child to respond, keep the things you say short and simple. \n- Confidently steer the conversation, covering all required elements. Getting sidetracked is fine but every statement should work to progress the conversation.\n- You are talking with a child, not at them."
          }
        ]
      },
      "vocab": {
          "role_messages": [
          {
            "role": "system",
            "content": "You are a warm, engaging tutor teaching vocabulary to a child as part of a reading program. Your tone should feel natural, conversational, and child-appropriate — avoid robotic or overly formal language. \n- Keep your responses brief. \n- Do not use emojis or special characters in your responses. \n Instead of Mr. or Mrs., use Mr or Mrs\n- Allow the child to respond, keep the things you say short and simple. \n- Confidently steer the conversation, covering all required elements. Getting sidetracked is fine but every statement should work to progress the conversation.\n- You are talking with a child, not at them."
          }
        ],
        "name": "vocab",
        "task_messages": [
          {
            "role": "system",
            "content": "TOOLS:\nA list of vocab words from the story has been provided.\nYou may silently call the check_vocabulary_progress() function only after completing all teaching steps for exactly two words. Do not mention that you are doing this.\nCRITICAL INSTRUCTION:\nDO NOT teach words the child already knows. If a child demonstrates they know a word, immediately move to the next word. This is essential for efficient learning.\nPROCEDURE:\nUsing the reading context that has been provided, you have access to the current vocabulary list and text.\nWORD SELECTION SYSTEM:\n- You must teach exactly 2 words total\n- Start with a word from the 4th grade list\n- If the child knows a word correctly, select the next word from a higher grade level if available\n- Continue this process until you have taught exactly 2 words\nFOR EACH WORD:\nAsk the child: \"Do you know what [word] means?\"\nBased on their response:\n- If they say yes but don't explain, ask: \"Can you tell me what it means?\"\n- If they give a correct explanation, move to the next word from a higher grade level (this does NOT count as one of your 2 taught words)\n- If they don't know the word or explain it incorrectly, proceed with teaching steps (this DOES count as one of your 2 taught words)\nTEACHING STEPS (only if the child does not know the word):\nIn a warm and conversational way (without listing steps), guide the child through the following:\n1. Define the word using simple, child-friendly language.\n2. Connect it to the story:\n- Give the sentence in which the word is found, and ask them what it means in this context.\n- Provide feedback to their response as needed.\n3. Connect it to their life:\n- Ask the child to relate the word to their own experience (e.g., \"What's something [word] in your own life?\")\n- Give clear feedback.\n4. Practice using the word:\n- Ask the child to make up a new sentence using the word.\n- Offer support and correction as needed.\nOnce you have taught exactly 2 vocabulary words that the student didn't already know, silently call check_vocabulary_progress() to move on. Do not keep going with words, and do not mention you are calling or checking anything at all!"
          }
        ],
        "functions": [
          {
            "type": "function",
            "function": {
              "name": "check_vocab_progress",
              "description": "Based on non-summary parts of the conversation, check progress through vocabulary instruction for both words",
              "parameters": {
                "type": "object",
                "properties": {
                  "selected_unknown_word": {
                    "type": "boolean",
                    "description": "Whether the model successfully selected a vocabulary word the child does not know, as verifed by the child."
                  },
                  "defined_simply": {
                    "type": "boolean",
                    "description": "Whether the model defined the word in simple terms."
                  },
                  "asked_book_context_understanding": {
                    "type": "boolean",
                    "description": "Whether the model asked for understanding within the context of the book"
                  },
                  "asked_broader_context_understanding": {
                    "type": "boolean",
                    "description": "Whether the model asked for understanding in broader context or general usage"
                  },
                  "asked_for_new_sentence": {
                    "type": "boolean",
                    "description": "Whether the model asked the child to use the word in a totally new sentence"
                  },
                  "vocab_words_known": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of vocab words the model asked about and child already knew and could provide accurate descriptions of."
                  },
                  "vocab_words_taught" : {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of vocab words the model taught to the child because they did not know them."
                  }
                },
                "required": [
                  "selected_unknown_word",
                  "defined_simply",
                  "asked_book_context_understanding",
                  "asked_broader_context_understanding",
                  "asked_for_new_sentence",
                  "vocab_words_known",
                  "vocab_words_taught"
                ]
              },
              "handler": "general_handler"
            }
          },
          {
            "type": "function",
            "function": {
              "name": "get_reading_context",
              "description": "Get the current reading context, particularly when you previously had to ask what chapter we are on",
              "parameters": {
                "type": "object",
                "properties": {
                  "variable_name": {
                    "type": "string",
                    "description": "The name of the variable to retrieve",
                    "default": "reading_context"
                  },
                  "current_index": {
                    "type": "integer",
                    "description": "The current index of the reading context, supplied by the student after you ask"
                  }
                },
                "required": [
                  "variable_name",
                  "current_index"
                ]
              },
              "handler": "get_activity_handler"
            }
          }
        ],
        "pre_actions": [
          {
            "type": "tts_say",
            "text": "Okay, now let's move on to some vocabulary work."
          }
        ],
        "post_actions": [
          {
            "type": "get_variable",
            "variable_name": "vocab",
            "handler": "get_variable_action_handler"
          }
        ]
      },
      "review": {
        "name": "review",
        "task_messages": [
          {
            "role": "system",
            "content": "Now conduct a SECOND ROUND of assessment for the vocabulary words we taught today.\n\nFor each word that required teaching (skip words they already knew), repeat these same three steps you did during instruction:\n1. Ask the child to define the word again in their own words\n2. Ask them to use the word in a new sentence without any help  \n3. Provide the formal definition one more time\n\nThis is the second time doing these steps - the first was during teaching, now you're doing them again as final review. Make this feel natural while systematically covering all elements again. Give detailed feedback to determine true mastery.\n\nAfter completing this second assessment round for all taught words, silently call check_review_progress (do not mention this function, or that you are checking anything at all!)"
          }
        ],
        "functions": [
          {
            "type": "function",
            "function": {
              "name": "check_review_progress",
              "description": "Based on non-summary parts of the conversation, check progress through review and recap of both words",
              "parameters": {
                "type": "object",
                "properties": {
                  "asked_for_definition": {
                    "type": "boolean",
                    "description": "Whether the model asked the child to define the word again"
                  },
                  "asked_for_sentence": {
                    "type": "boolean",
                    "description": "Whether the model asked for a new sentence once again"
                  },
                  "provided_formal_definition": {
                    "type": "boolean",
                    "description": "Whether the model provided the formal definition again"
                  },
                  "vocab_words_taught+mastered": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Info field for vocab_words_taught+mastered"
                  },
                  "vocab_words_taught+not_mastered": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Info field for vocab_words_taught+not_mastered"
                  }
                },
                "required": [
                  "asked_for_definition",
                  "asked_for_sentence",
                  "provided_formal_definition",
                  "vocab_words_taught+mastered",
                  "vocab_words_taught+not_mastered"
                ]
              },
              "handler": "general_handler"
            }
          },
          {
            "type": "function",
            "function": {
              "name": "get_reading_context",
              "description": "Get the current reading context, particularly when you previously had to ask what chapter we are on",
              "parameters": {
                "type": "object",
                "properties": {
                  "variable_name": {
                    "type": "string",
                    "description": "The name of the variable to retrieve",
                    "default": "reading_context"
                  },
                  "current_index": {
                    "type": "integer",
                    "description": "The current index of the reading context, supplied by the student after you ask"
                  }
                },
                "required": [
                  "variable_name",
                  "current_index"
                ]
              },
              "handler": "get_activity_handler"
            }
          }
        ],
        "pre_actions": [
          {
            "type": "tts_say",
            "text": "Okay, now let's cover the words once more to ensure you have really got them down."
          }
        ],
        "post_actions": [
          {
            "type": "get_variable",
            "variable_name": "",
            "handler": "get_n_handler"
          }
        ]
      },
      "closing": {
        "name": "closing",
        "task_messages": [
          {
            "role": "system",
            "content": "Close the session by praising the child that they've done a great job today. VERY BRIEFLY encourage continued reading, suggested word usage, and summarize the learning. \n\nCRITICALLY IMPORTANT: After completing these steps silently call the check_closing_progress() function. Do not mention that you are doing this."
          }
        ],
        "functions": [
          {
            "type": "function",
            "function": {
              "name": "check_closing_progress",
              "description": "Based on non-summary parts of the conversation, check completion of closing elements. This must be based on actual conversation, not the reading context or summary. If there is no conversation, then these checks MUST fail.",
              "parameters": {
                "type": "object",
                "properties": {
                  "praised_child": {
                    "type": "boolean",
                    "description": "Whether the model praised the child for their work"
                  },
                  "encouraged_continued_reading": {
                    "type": "boolean",
                    "description": "Whether the model encouraged continued listening to the audiobook"
                  },
                  "suggested_word_usage": {
                    "type": "boolean",
                    "description": "Whether the model suggested noticing or using the words"
                  },
                  "summarized_learning": {
                    "type": "boolean",
                    "description": "Whether the model summarized what was learned"
                  }
                },
                "required": [
                  "praised_child",
                  "encouraged_continued_reading",
                  "suggested_word_usage",
                  "summarized_learning"
                ]
              },
              "handler": "general_handler"
            }
          }
        ],
        "post_actions": [
          {
            "type": "get_variable",
            "source": "user",
            "variable_name": "vocab_words_taught",
            "handler": "get_variable_action_handler"
          }
        ]
      },
      "end": {
        "task_messages": [
          {
            "role": "system",
            "content": "The session is now complete. Say goodbye in a friendly and encouraging way."
          }
        ],
        "functions": [],
        "post_actions": [
          {
            "type": "end_conversation",
            "text": "Thank you for learning with me today, have a wonderful day!"
          }
        ]
      }
    }
  }
}
